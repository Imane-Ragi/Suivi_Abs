// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Suivi_Abs.Models;

namespace Suivi_Abs.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Suivi_Abs.Models.Absence", b =>
                {
                    b.Property<int>("id_RES")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("id_E")
                        .HasColumnType("int");

                    b.Property<int>("id_G")
                        .HasColumnType("int");

                    b.Property<int>("id_S")
                        .HasColumnType("int");

                    b.HasKey("id_RES");

                    b.HasIndex("id_E");

                    b.HasIndex("id_G");

                    b.HasIndex("id_S");

                    b.ToTable("absences");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Compte", b =>
                {
                    b.Property<int>("id_C")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("matricule")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("nComplet")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("poste")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("roleC")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id_C");

                    b.ToTable("comptes");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Etudiant", b =>
                {
                    b.Property<int>("id_E")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ncomplet")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("adresse")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("dateN")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("id_G")
                        .HasColumnType("int");

                    b.Property<string>("imageE")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("lieu_n")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("matricule")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id_E");

                    b.HasIndex("id_G");

                    b.ToTable("etudiants");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Filiere", b =>
                {
                    b.Property<int>("id_F")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nFiliere")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id_F");

                    b.ToTable("filieres");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Groupe", b =>
                {
                    b.Property<int>("id_G")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Numgroupe")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("id_F")
                        .HasColumnType("int");

                    b.HasKey("id_G");

                    b.HasIndex("id_F");

                    b.ToTable("groupes");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Matiere", b =>
                {
                    b.Property<int>("id_M")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("id_F")
                        .HasColumnType("int");

                    b.Property<int>("id_P")
                        .HasColumnType("int");

                    b.Property<string>("nMatiere")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id_M");

                    b.HasIndex("id_F");

                    b.HasIndex("id_P");

                    b.ToTable("matieres");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Professeur", b =>
                {
                    b.Property<int>("id_P")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dateN")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dateR")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("matricule")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("nComplet")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("specialité")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id_P");

                    b.ToTable("professeurs");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Seance", b =>
                {
                    b.Property<int>("id_S")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Duree")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Num_S")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("date_S")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_G")
                        .HasColumnType("int");

                    b.Property<int>("id_M")
                        .HasColumnType("int");

                    b.Property<string>("numSalle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id_S");

                    b.HasIndex("id_G");

                    b.HasIndex("id_M");

                    b.ToTable("seances");
                });

            modelBuilder.Entity("Suivi_Abs.Models.Absence", b =>
                {
                    b.HasOne("Suivi_Abs.Models.Etudiant", "Etudiant")
                        .WithMany()
                        .HasForeignKey("id_E")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Suivi_Abs.Models.Groupe", "Groupe")
                        .WithMany()
                        .HasForeignKey("id_G")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Suivi_Abs.Models.Seance", "Seance")
                        .WithMany()
                        .HasForeignKey("id_S")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Suivi_Abs.Models.Etudiant", b =>
                {
                    b.HasOne("Suivi_Abs.Models.Groupe", "Groupe")
                        .WithMany()
                        .HasForeignKey("id_G")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Suivi_Abs.Models.Groupe", b =>
                {
                    b.HasOne("Suivi_Abs.Models.Filiere", "Filiere")
                        .WithMany()
                        .HasForeignKey("id_F")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Suivi_Abs.Models.Matiere", b =>
                {
                    b.HasOne("Suivi_Abs.Models.Filiere", "filiere")
                        .WithMany()
                        .HasForeignKey("id_F")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Suivi_Abs.Models.Professeur", "Professeur")
                        .WithMany()
                        .HasForeignKey("id_P")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Suivi_Abs.Models.Seance", b =>
                {
                    b.HasOne("Suivi_Abs.Models.Groupe", "Groupe")
                        .WithMany()
                        .HasForeignKey("id_G")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Suivi_Abs.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("id_M")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
